//-----------------------------------------------------------------------------
// Copyright 2004 Silicon Laboratories, Inc.
//
// FILE NAME      : dtmfgen.h
// TARGET DEVICE  : C8051F300
// CREATED ON     : 25.05.2004
// CREATED BY     : SYRO
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// Global CONSTANTS
//-----------------------------------------------------------------------------
#define SYSCLK      24500000                // System clock
#define SAMPLE_NO   310                     // No. of samples in the sine
                                            // lookup table


// Sine lookup table, 600mV peak-to-peak
code unsigned char sine_table[SAMPLE_NO] = {
    191, 190, 189, 188, 186, 185, 184, 182,
    181, 180, 179, 177, 176, 175, 174, 172, 
    171, 170, 169, 167, 166, 165, 164, 163, 
    162, 160, 159, 158, 157, 156, 155, 154, 
    153, 152, 151, 150, 149, 148, 147, 146, 
    145, 144, 143, 143, 142, 141, 140, 139, 
    139, 138, 137, 137, 136, 135, 135, 134, 
    133, 133, 132, 132, 131, 131, 131, 130, 
    130, 130, 129, 129, 129, 128, 128, 128, 
    128, 128, 128, 128, 128, 128, 128, 128, 
    128, 128, 128, 128, 128, 128, 128, 129, 
    129, 129, 130, 130, 130, 131, 131, 131, 
    132, 132, 133, 133, 134, 135, 135, 136, 
    137, 137, 138, 139, 139, 140, 141, 142, 
    143, 143, 144, 145, 146, 147, 148, 149, 
    150, 151, 152, 153, 154, 155, 156, 157, 
    158, 159, 160, 162, 163, 164, 165, 166, 
    167, 169, 170, 171, 172, 174, 175, 176, 
    177, 179, 180, 181, 182, 184, 185, 186, 
    188, 189, 190, 191, 193, 194, 195, 197, 
    198, 199, 201, 202, 203, 204, 206, 207, 
    208, 209, 211, 212, 213, 214, 216, 217, 
    218, 219, 220, 221, 223, 224, 225, 226, 
    227, 228, 229, 230, 231, 232, 233, 234, 
    235, 236, 237, 238, 239, 240, 240, 241, 
    242, 243, 244, 244, 245, 246, 246, 247, 
    248, 248, 249, 250, 250, 251, 251, 252, 
    252, 252, 253, 253, 253, 254, 254, 254, 
    255, 255, 255, 255, 255, 255, 255, 255, 
    255, 255, 255, 255, 255, 255, 255, 255, 
    255, 255, 254, 254, 254, 253, 253, 253, 
    252, 252, 252, 251, 251, 250, 250, 249, 
    248, 248, 247, 246, 246, 245, 244, 244, 
    243, 242, 241, 240, 240, 239, 238, 237, 
    236, 235, 234, 233, 232, 231, 230, 229, 
    228, 227, 226, 225, 224, 223, 221, 220, 
    219, 218, 217, 216, 214, 213, 212, 211, 
    209, 208, 207, 206, 204, 203, 202, 201, 
    199, 198, 197, 195, 194, 193  
};


// Increments for the sine table indexes
code unsigned char increment[8] = {
    27, 30, 33, 37, 47, 52, 57, 63
};


//-----------------------------------------------------------------------------
// Global VARIABLES
//-----------------------------------------------------------------------------
sbit PWM = P0^0;							// PWM output
sbit C0  = P0^5;                            // Keypad column 0
sbit C1  = P0^6;                            // Keypad column 1
sbit C2  = P0^7;                            // Keypad column 2

volatile unsigned char row, col;            // Keypad row and column number

unsigned char col_val;                      // Keypad column pins value

unsigned int low_index, high_index;         // Indexes for sine lookup table

unsigned int pwm_counter;                   // Counter for PWM duty cycle
                                            // update rate

unsigned int tone_duration;                 // Counter for tone duration

unsigned char TMR0RLH, TMR0RLL;             // Timer0 counter reload values

bit valid_key;                              // Flag indicating a valid keypress

//-----------------------------------------------------------------------------
// Function PROTOTYPES
//-----------------------------------------------------------------------------
void SYSCLK_Init(void);                     // Configure system clock
void PORT_Init(void);                       // Configure Crossbar and GPIO
void PCA0_Init(void);                       // Configure PCA0
void Timer0_Init(int counts);               // Configure Timer0
void Interrupt_Init(void);                  // Initialize interrupts


//-----------------------------------------------------------------------------
// end of dtmfgen.h
//-----------------------------------------------------------------------------